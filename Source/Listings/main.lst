C51 COMPILER V9.60.0.0   MAIN                                                              12/04/2022 04:29:22 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main
                    -.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          //===========================khai bao cac thu vien can su dung==============//
   2          #include<main.h>
   3          
   4          void reset_var();
   5          void reverse(char* str, int len);
   6          int intToStr(int x, char str[], int d);
   7          void ftoa(float n, char* res, int afterpoint);
   8          
   9          
  10          unsigned char key=0;
  11          idata char buff_input[20];          // Bo nho dem buff, Luu bien vung max 26
  12          idata char buff_result[10];
  13          //volatile int pointer =0;
  14          
  15          void main()
  16          {
  17   1            LCD_Init();         //Thiet lap cau hinh cho LCD
  18   1        delay_ms(10);
  19   1            //Keypad_Init();      //goi ham khai bao cac chan ma tran phim 4x4
  20   1            LCD_Clear();
  21   1            delay_ms(10);
  22   1            LCD_Gotoxy(0,0);
  23   1        delay_ms(10);
  24   1            LCD_PutString("Hi there!");
  25   1            delay_ms(500);
  26   1            reset_var();
  27   1        delay_ms(10);
  28   1        
  29   1            while(1)
  30   1              {
  31   2                  key = KEY4X4_GetKey();    //nhan thu tu phím nhan
  32   2                  if (key!=0)               //phat hien co phim nhan
  33   2                    {
  34   3                      if (key !='C')
  35   3                        {
  36   4                          LCD_PutChar(key); //hien thi ky tu phim ta LCD
  37   4                          
  38   4                          delay_ms(200);
  39   4                        }
  40   3                      else 
  41   3                          reset_var();
  42   3                    } 
  43   2              }
  44   1      }
  45          void reset_var()
  46          {
  47   1        LCD_Clear();
  48   1        LCD_control_blink_xy(0,0);
  49   1        
  50   1      }
  51          // Reverses a string 'str' of length 'len'
  52          void reverse(char* str, int len)
  53          {
  54   1        int i = 0, j = len - 1, temp;
C51 COMPILER V9.60.0.0   MAIN                                                              12/04/2022 04:29:22 PAGE 2   

  55   1        while (i < j) {
  56   2          temp = str[i];
  57   2          str[i] = str[j];
  58   2          str[j] = temp;
  59   2          i++;
  60   2          j--;
  61   2        }
  62   1      }
  63          
  64          // Converts a given integer x to string str[].
  65          // d is the number of digits required in the output.
  66          // If d is more than the number of digits in x,
  67          // then 0s are added at the beginning.
  68          int intToStr(int x, char str[], int d)
  69          {
  70   1        int i = 0;
  71   1        while (x) {
  72   2          str[i++] = (x % 10) + '0';
  73   2          x = x / 10;
  74   2        }
  75   1      
  76   1        // If number of digits required is more, then
  77   1        // add 0s at the beginning
  78   1        while (i < d)
  79   1          str[i++] = '0';
  80   1      
  81   1        reverse(str, i);
  82   1        str[i] = '\0';
  83   1        return i;
  84   1      }
  85          
  86          // Converts a floating-point/double number to a string.
  87          void ftoa(float n, char* res, int afterpoint)
  88          {
  89   1        // Extract integer part
  90   1        int ipart = (int)n;
  91   1      
  92   1        // Extract floating part
  93   1        float fpart = n - (float)ipart;
  94   1      
  95   1        // convert integer part to string
  96   1        int i = intToStr(ipart, res, 0);
  97   1      
  98   1        // check for display option after point
  99   1        if (afterpoint != 0) {
 100   2          res[i] = '.'; // add dot
 101   2      
 102   2          // Get the value of fraction part upto given no.
 103   2          // of points after dot. The third parameter
 104   2          // is needed to handle cases like 233.007
 105   2          fpart = fpart * pow(10, afterpoint);
 106   2      
 107   2          intToStr((int)fpart, res + i + 1, afterpoint);
 108   2        }
 109   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    537    ----
   CONSTANT SIZE    =     10    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
C51 COMPILER V9.60.0.0   MAIN                                                              12/04/2022 04:29:22 PAGE 3   

   DATA SIZE        =      1      35
   IDATA SIZE       =     30    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
